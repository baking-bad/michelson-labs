(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{383:function(t,a,s){"use strict";s.r(a);var n=s(43),o=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"chapter-10"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chapter-10"}},[t._v("#")]),t._v(" Chapter 10")]),t._v(" "),s("p",[t._v("This chapter is going to introduce three complex types of data that are extremely important for your smart contracts."),s("br"),t._v("\nSo far, the smart contracts we have written were quite simple: they received data as input, applied some logic to the data and output a result. However, this is not what most contracts do. Smart contracts are an interesting solution to many problems because they can retain information and the new input sent to the contract can be compared and/or used against the data that's already in the contract!")]),t._v(" "),s("p",[t._v("In a previous chapter, we introduced the "),s("code",[t._v("list")]),t._v(" type. Lists allow us to store multiple values of the same type in an ordered fashion. However, they lack some features that you may need for your smart contract. For example, it is not possible natively to know if a list contains a certain value (i.e without implementing a loop).")]),t._v(" "),s("p",[t._v("Michelson provides three other types of values that can store other values: sets, maps and big maps. Their different properties will be explained below but in a nutshell, sets are lists of unique elements, maps are tables where each value matches a unique key and big maps are maps containing a large number of values. Let's start with sets!")]),t._v(" "),s("h2",{attrs:{id:"working-with-sets"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#working-with-sets"}},[t._v("#")]),t._v(" Working with sets")]),t._v(" "),s("p",[t._v("Sets are a sorted collection of unique values. A "),s("code",[t._v("set")]),t._v(" is like a "),s("code",[t._v("list")]),t._v(" with the main difference of storing only unique values. While "),s("code",[t._v("{ 1 ; 2 ; 1 ; 2 ; 1 ; 2 }")]),t._v(" is a valid value of type "),s("code",[t._v("(list int)")]),t._v(", it wouldn't be a valid value of type "),s("code",[t._v("(set int)")]),t._v(". Here is how to create an empty set:")]),t._v(" "),s("div",{staticClass:"language-Michelson extra-class"},[s("pre",{staticClass:"language-Michelson"},[s("code",{staticClass:"language-Michelson"},[s("span",{staticClass:"token keyword"},[t._v("storage")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("set")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("parameter")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("unit")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("code")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("DROP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("EMPTY_SET")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("NIL")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("operation")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PAIR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("RUN")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token attr-name"},[t._v("%default")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Unit")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")])])])]),s("div",{staticClass:"stdout"},[s("pre",[s("span",{staticClass:"stream-name"},[t._v("stdout")]),s("br"),t._v("storage (set int);\nparameter unit;\ncode { DROP ; EMPTY_SET int ; NIL operation ; PAIR };\nRUN: use %default; drop all; push (Unit, {1});\nDROP: pop (Unit, {1});\nEMPTY_SET: push [];\nNIL: push [];\nPAIR: pop [], []; push ([], set());")])]),t._v(" "),s("div",{staticClass:"embedded-html"},[s("table",[s("thead",[s("tr",[s("th",[t._v("value                                  ")]),s("th",[t._v("type                                        ")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("{}")])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("set int")])])])])])]),t._v(" "),s("p",[t._v("You can use the "),s("strong",[s("code",[t._v("EMPTY_SET")])]),t._v(" instruction to create an empty set. It takes 1 argument, the type of the elements you will store in the set. It must be a comparable type: you can, for example, put strings and integers in a set but you cannot put a map or a set inside a set.")]),t._v(" "),s("p",[t._v("Next, you want to save some data inside the set. You can use the "),s("strong",[s("code",[t._v("UPDATE")])]),t._v(" instruction to push new values in the set. This instruction requires a little setup illustrated in the example below:")]),t._v(" "),s("div",{staticClass:"language-Michelson extra-class"},[s("pre",{staticClass:"language-Michelson"},[s("code",{staticClass:"language-Michelson"},[s("span",{staticClass:"token keyword"},[t._v("storage")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("set")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("parameter")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("unit")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("code")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("DROP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("EMPTY_SET")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("bool")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("True")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("UPDATE")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("NIL")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("operation")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PAIR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("RUN")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token attr-name"},[t._v("%default")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Unit")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")])])])]),s("div",{staticClass:"stdout"},[s("pre",[s("span",{staticClass:"stream-name"},[t._v("stdout")]),s("br"),t._v("storage (set int);\nparameter unit;\ncode { DROP ; EMPTY_SET int ; PUSH bool True ; PUSH int 5 ; UPDATE ; NIL operation ; PAIR };\nRUN: use %default; drop all; push (Unit, {1});\nDROP: pop (Unit, {1});\nEMPTY_SET: push [];\nPUSH: push True;\nPUSH: push 5;\nUPDATE: pop 5, True, []; push {5};\nNIL: push [];\nPAIR: pop [], {5}; push ([], {5});")])]),t._v(" "),s("div",{staticClass:"embedded-html"},[s("table",[s("thead",[s("tr",[s("th",[t._v("value                                     ")]),s("th",[t._v("type                                        ")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("{ 5 }")])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("set int")])])])])])]),t._v(" "),s("p",[t._v("We could also have used the set in the storage:")]),t._v(" "),s("div",{staticClass:"language-Michelson extra-class"},[s("pre",{staticClass:"language-Michelson"},[s("code",{staticClass:"language-Michelson"},[s("span",{staticClass:"token keyword"},[t._v("storage")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("set")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("parameter")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("unit")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("code")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("CDR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("bool")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("True")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("UPDATE")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("NIL")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("operation")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PAIR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("RUN")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token attr-name"},[t._v("%default")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Unit")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")])])])]),s("div",{staticClass:"stdout"},[s("pre",[s("span",{staticClass:"stream-name"},[t._v("stdout")]),s("br"),t._v("storage (set int);\nparameter unit;\ncode { CDR ; PUSH bool True ; PUSH int 5 ; UPDATE ; NIL operation ; PAIR };\nRUN: use %default; drop all; push (Unit, {1});\nCDR: pop (Unit, {1}); push {1};\nPUSH: push True;\nPUSH: push 5;\nUPDATE: pop 5, True, {1}; push {1, 5};\nNIL: push [];\nPAIR: pop [], {1, 5}; push ([], {1, 5});")])]),t._v(" "),s("div",{staticClass:"embedded-html"},[s("table",[s("thead",[s("tr",[s("th",[t._v("value                                         ")]),s("th",[t._v("type                                        ")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("{ 5 ; 1 }")])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("set int")])])])])])]),t._v(" "),s("p",[t._v("Here is what happens in the stack: the "),s("strong",[s("code",[t._v("UPDATE")])]),t._v(" instruction requires 3 elements in the stack before proceeding:")]),t._v(" "),s("ol",[s("li",[t._v("The element to add to the set")]),t._v(" "),s("li",[t._v("A boolean value set to "),s("code",[t._v("True")]),t._v(" to indicate that you want to add a new element to the set")]),t._v(" "),s("li",[t._v("The set in which you want to store the new value\nIf the element is already present in the stack, the execution will just continue without any change. Otherwise, the new element will be pushed at the head position of the set.")])]),t._v(" "),s("p",[t._v("If you set the boolean value to "),s("code",[t._v("False")]),t._v(" and provide a value that already exists in the set, "),s("strong",[s("code",[t._v("UPDATE")])]),t._v(" will remove this element from the set:")]),t._v(" "),s("div",{staticClass:"language-Michelson extra-class"},[s("pre",{staticClass:"language-Michelson"},[s("code",{staticClass:"language-Michelson"},[s("span",{staticClass:"token keyword"},[t._v("storage")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("set")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("parameter")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("unit")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("code")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("CDR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("bool")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("False")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("int")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("UPDATE")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("NIL")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("operation")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PAIR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("RUN")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token attr-name"},[t._v("%default")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Unit")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("2")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("3")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("4")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")])])])]),s("div",{staticClass:"stdout"},[s("pre",[s("span",{staticClass:"stream-name"},[t._v("stdout")]),s("br"),t._v("storage (set int);\nparameter unit;\ncode { CDR ; PUSH bool False ; PUSH int 5 ; UPDATE ; NIL operation ; PAIR };\nRUN: use %default; drop all; push (Unit, {1, 2, 3, 4, 5});\nCDR: pop (Unit, {1, 2, 3, 4, 5}); push {1, 2, 3, 4, 5};\nPUSH: push False;\nPUSH: push 5;\nUPDATE: pop 5, False, {1, 2, 3, 4, 5}; push {1, 2, 3, 4};\nNIL: push [];\nPAIR: pop [], {1, 2, 3, 4}; push ([], {1, 2, 3, 4});")])]),t._v(" "),s("div",{staticClass:"embedded-html"},[s("table",[s("thead",[s("tr",[s("th",[t._v("value                                                 ")]),s("th",[t._v("type                                        ")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("{ 1 ; 2 ; 3 ; 4 }")])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("set int")])])])])])]),t._v(" "),s("p",[t._v("Now you understand why you must set up correctly the stack before using "),s("strong",[s("code",[t._v("UPDATE")])]),t._v(": the 3 required elements must be in the right order and the boolean element must be set to the right value in order to add or remove a value from the set. Here is a more complex example:")]),t._v(" "),s("div",{staticClass:"language-Michelson extra-class"},[s("pre",{staticClass:"language-Michelson"},[s("code",{staticClass:"language-Michelson"},[s("span",{staticClass:"token keyword"},[t._v("storage")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("set")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("parameter")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("pair")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("code")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token variable"},[t._v("UNPPAIAIR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("DIP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("SWAP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("bool")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("True")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("SWAP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("UPDATE")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("SWAP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("bool")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("False")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("SWAP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("UPDATE")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("NIL")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("operation")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PAIR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("RUN")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token attr-name"},[t._v("%default")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("Pair")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"mango"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"apple"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"banana"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"apple"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"strawberry"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")])])])]),s("div",{staticClass:"stdout"},[s("pre",[s("span",{staticClass:"stream-name"},[t._v("stdout")]),s("br"),t._v("storage (set string);\nparameter (pair string string);\ncode { { { DUP ; CAR ; DIP { CDR } } ; { DUP ; CAR ; DIP { CDR } } } ; DIP { SWAP } ; PUSH bool True ; SWAP ; UPDATE ; SWAP ; PUSH bool False ; SWAP ; UPDATE ; NIL operation ; PAIR };\nRUN: use %default; drop all; push (('mango', 'apple'), {'banana', 'strawberry', 'apple'});\nDUP: push (('mango', 'apple'), {'banana', 'strawberry', 'apple'});\nCAR: pop (('mango', 'apple'), {'banana', 'strawberry', 'apple'}); push ('mango', 'apple');\nDIP: protect 1 item(s);\nCDR: pop (('mango', 'apple'), {'banana', 'strawberry', 'apple'}); push {'banana', 'strawberry', 'apple'};\nrestore 1 item(s);\nDUP: push ('mango', 'apple');\nCAR: pop ('mango', 'apple'); push mango;\nDIP: protect 1 item(s);\nCDR: pop ('mango', 'apple'); push apple;\nrestore 1 item(s);\nDIP: protect 1 item(s);\nSWAP: pop apple, {'banana', 'strawberry', 'apple'}; push apple; push {'banana', 'strawberry', 'apple'};\nrestore 1 item(s);\nPUSH: push True;\nSWAP: pop True, mango; push True; push mango;\nUPDATE: pop mango, True, {'banana', 'strawberry', 'apple'}; push {'banana', 'strawberry', 'apple', 'mango'};\nSWAP: pop {'banana', 'strawberry', 'apple', 'mango'}, apple; push {'banana', 'strawberry', 'apple', 'mango'}; push apple;\nPUSH: push False;\nSWAP: pop False, apple; push False; push apple;\nUPDATE: pop apple, False, {'banana', 'strawberry', 'apple', 'mango'}; push {'banana', 'strawberry', 'mango'};\nNIL: push [];\nPAIR: pop [], {'banana', 'strawberry', 'mango'}; push ([], {'banana', 'strawberry', 'mango'});")])]),t._v(" "),s("div",{staticClass:"embedded-html"},[s("table",[s("thead",[s("tr",[s("th",[t._v("value                                                                     ")]),s("th",[t._v("type                                           ")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v('{ "mango" ; "banana" ; "strawberry" }')])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("set string")])])])])])]),t._v(" "),s("p",[t._v("First, we deconstruct the parameter with "),s("strong",[s("code",[t._v("UNPPAIAIR")])]),t._v(" to get our two fruits on the stack with the set of fruits below. Then, we push "),s("em",[t._v("mango")]),t._v(" into the set of fruits before removing "),s("em",[t._v("apple")]),t._v(". A few "),s("strong",[s("code",[t._v("SWAP")])]),t._v(" instructions are necessary to put all the elements in the right order. Observe how the boolean values are set to "),s("code",[t._v("True")]),t._v(" and "),s("code",[t._v("False")]),t._v(" according to the effect you want to create on the set.")]),t._v(" "),s("p",[t._v("Before trying to remove or add a value to a set, it would be great to check if the value is already inside. This is what you can achieve with the "),s("strong",[s("code",[t._v("MEM")])]),t._v(" instruction:")]),t._v(" "),s("div",{staticClass:"language-Michelson extra-class"},[s("pre",{staticClass:"language-Michelson"},[s("code",{staticClass:"language-Michelson"},[s("span",{staticClass:"token keyword"},[t._v("storage")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("set")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("parameter")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("code")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token variable"},[t._v("UNPAIR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("DIP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("DUP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("DUP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("DIP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("SWAP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("MEM")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("IF")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token variable"},[t._v("FAIL")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("bool")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("True")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("SWAP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("UPDATE")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("NIL")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("operation")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PAIR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("RUN")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token attr-name"},[t._v("%default")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"mango"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"banana"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"apple"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"strawberry"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")])])])]),s("div",{staticClass:"stdout"},[s("pre",[s("span",{staticClass:"stream-name"},[t._v("stdout")]),s("br"),t._v("storage (set string);\nparameter string;\ncode { { DUP ; CAR ; DIP { CDR } } ; DIP { DUP } ; DUP ; DIP { SWAP } ; MEM ; IF { { UNIT ; FAILWITH } } { PUSH bool True ; SWAP ; UPDATE } ; NIL operation ; PAIR };\nRUN: use %default; drop all; push ('mango', {'banana', 'strawberry', 'apple'});\nDUP: push ('mango', {'banana', 'strawberry', 'apple'});\nCAR: pop ('mango', {'banana', 'strawberry', 'apple'}); push mango;\nDIP: protect 1 item(s);\nCDR: pop ('mango', {'banana', 'strawberry', 'apple'}); push {'banana', 'strawberry', 'apple'};\nrestore 1 item(s);\nDIP: protect 1 item(s);\nDUP: push {'banana', 'strawberry', 'apple'};\nrestore 1 item(s);\nDUP: push mango;\nDIP: protect 1 item(s);\nSWAP: pop mango, {'banana', 'strawberry', 'apple'}; push mango; push {'banana', 'strawberry', 'apple'};\nrestore 1 item(s);\nMEM: pop mango, {'banana', 'strawberry', 'apple'}; push False;\nIF: pop False;\nPUSH: push True;\nSWAP: pop True, mango; push True; push mango;\nUPDATE: pop mango, True, {'banana', 'strawberry', 'apple'}; push {'banana', 'strawberry', 'apple', 'mango'};\nNIL: push [];\nPAIR: pop [], {'banana', 'strawberry', 'apple', 'mango'}; push ([], {'banana', 'strawberry', 'apple', 'mango'});")])]),t._v(" "),s("div",{staticClass:"embedded-html"},[s("table",[s("thead",[s("tr",[s("th",[t._v("value                                                                               ")]),s("th",[t._v("type                                           ")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v('{ "mango" ; "banana" ; "apple" ; "strawberry" }')])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("set string")])])])])])]),t._v(" "),s("p",[t._v("In this contract, we duplicate the values passed in the parameter because "),s("strong",[s("code",[t._v("MEM")])]),t._v(" is going to remove the element and the set we want to test. If the value is not in the set, it will be added, otherwise, the contract will fail. As expected, "),s("em",[t._v("mango")]),t._v(" is not in the set, so the value gets added to the final set. If you replace "),s("em",[t._v("mango")]),t._v(" with "),s("em",[t._v("apple")]),t._v(", you will see the contract fail.")]),t._v(" "),s("p",[t._v("As it is also the case for other types storing multiple values, you can check the size of a set by using the "),s("strong",[s("code",[t._v("SIZE")])]),t._v(" instruction:")]),t._v(" "),s("div",{staticClass:"language-Michelson extra-class"},[s("pre",{staticClass:"language-Michelson"},[s("code",{staticClass:"language-Michelson"},[s("span",{staticClass:"token keyword"},[t._v("storage")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("nat")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("parameter")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("set")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("code")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("CAR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("SIZE")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("NIL")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("operation")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PAIR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("RUN")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token attr-name"},[t._v("%default")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"banana"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"apple"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"strawberry"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("0")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")])])])]),s("div",{staticClass:"stdout"},[s("pre",[s("span",{staticClass:"stream-name"},[t._v("stdout")]),s("br"),t._v("storage nat;\nparameter (set string);\ncode { CAR ; SIZE ; NIL operation ; PAIR };\nRUN: use %default; drop all; push ({'banana', 'strawberry', 'apple'}, 0);\nCAR: pop ({'banana', 'strawberry', 'apple'}, 0); push {'banana', 'strawberry', 'apple'};\nSIZE: pop {'banana', 'strawberry', 'apple'}; push 3;\nNIL: push [];\nPAIR: pop [], 3; push ([], 3);")])]),t._v(" "),s("div",{staticClass:"embedded-html"},[s("table",[s("thead",[s("tr",[s("th",[t._v("value                                 ")]),s("th",[t._v("type                                    ")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("3")])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("nat")])])])])])]),t._v(" "),s("p",[t._v("The "),s("strong",[s("code",[t._v("SIZE")])]),t._v(" instruction returns a value of type "),s("code",[t._v("nat")]),t._v(". Add more strings to the set to see it working!")]),t._v(" "),s("h2",{attrs:{id:"working-with-maps"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#working-with-maps"}},[t._v("#")]),t._v(" Working with maps")]),t._v(" "),s("p",[t._v("Maps and big maps are probably the type of complex values you will work with most of the time. As big maps are a kind of map, we start with maps!")]),t._v(" "),s("p",[t._v("Maps provide a very convenient way of storing data: they are like a table with two columns, a simple value on the left side that you can use to retrieve the data on the right side. This allows to store complex data that you can find very quickly and easily. For example, in a token contract, you can associate an address with its balance and the chosen allowances. When creating a new map, you have to specifiy the type of the keys and the type of the values, as you won't be able to store data that are not of the specified type. Here is how to create an empty map:")]),t._v(" "),s("div",{staticClass:"language-Michelson extra-class"},[s("pre",{staticClass:"language-Michelson"},[s("code",{staticClass:"language-Michelson"},[s("span",{staticClass:"token keyword"},[t._v("storage")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("map")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("address")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("nat")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("parameter")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("unit")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("code")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("DROP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("EMPTY_MAP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("address")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("nat")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("NIL")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("operation")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PAIR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("RUN")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token attr-name"},[t._v("%default")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Unit")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")])])])]),s("div",{staticClass:"stdout"},[s("pre",[s("span",{staticClass:"stream-name"},[t._v("stdout")]),s("br"),t._v("storage (map address nat);\nparameter unit;\ncode { DROP ; EMPTY_MAP address nat ; NIL operation ; PAIR };\nRUN: use %default; drop all; push (Unit, {});\nDROP: pop (Unit, {});\nEMPTY_MAP: push {};\nNIL: push [];\nPAIR: pop [], {}; push ([], {});")])]),t._v(" "),s("div",{staticClass:"embedded-html"},[s("table",[s("thead",[s("tr",[s("th",[t._v("value                                  ")]),s("th",[t._v("type                                                ")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("{}")])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("map address nat")])])])])])]),t._v(" "),s("p",[t._v("You can use any type you want as a key as long as it is a comparable type.")]),t._v(" "),s("p",[t._v("Adding and removing values from a map is going to be a little easier than doing it with a set 😅 However, we are going to use the same instruction, "),s("strong",[s("code",[t._v("UPDATE")])]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-Michelson extra-class"},[s("pre",{staticClass:"language-Michelson"},[s("code",{staticClass:"language-Michelson"},[s("span",{staticClass:"token keyword"},[t._v("storage")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("map")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("address")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("nat")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("parameter")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("unit")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("code")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("DROP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("EMPTY_MAP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("address")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("nat")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("option")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("nat")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("Some")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("address")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("UPDATE")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("NIL")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("operation")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PAIR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("RUN")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token attr-name"},[t._v("%default")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Unit")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")])])])]),s("div",{staticClass:"stdout"},[s("pre",[s("span",{staticClass:"stream-name"},[t._v("stdout")]),s("br"),t._v("storage (map address nat);\nparameter unit;\ncode { DROP ; EMPTY_MAP address nat ; PUSH (option nat) (Some 5) ; PUSH address \"tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb\" ; UPDATE ; NIL operation ; PAIR };\nRUN: use %default; drop all; push (Unit, {});\nDROP: pop (Unit, {});\nEMPTY_MAP: push {};\nPUSH: push (5,);\nPUSH: push tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb;\nUPDATE: pop tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb, (5,), {}; push {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5};\nNIL: push [];\nPAIR: pop [], {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5}; push ([], {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5});")])]),t._v(" "),s("div",{staticClass:"embedded-html"},[s("table",[s("thead",[s("tr",[s("th",[t._v("value                                                                                ")]),s("th",[t._v("type                                                ")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v('{ Elt "tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb" 5 }')])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("map address nat")])])])])])]),t._v(" "),s("p",[t._v("In order to add a new key/pair value to a map, the stack must have three elements in the following order:")]),t._v(" "),s("ol",[s("li",[t._v("The key associated to the value to add")]),t._v(" "),s("li",[t._v("The value you want to add")]),t._v(" "),s("li",[t._v("The map that you want to update\nWhen the stack is correctly set up, you can call the "),s("strong",[s("code",[t._v("UPDATE")])]),t._v(" instruction. It is important that the value you use to update the map is an "),s("code",[t._v("optional")]),t._v(" value whose type is going to be the expected type of the values in the map. If you use "),s("code",[t._v("(Some type)")]),t._v(", you will add a new value to the map. However, if you use "),s("code",[t._v("(None)")]),t._v(", you will remove the value at the provided key:")])]),t._v(" "),s("div",{staticClass:"language-Michelson extra-class"},[s("pre",{staticClass:"language-Michelson"},[s("code",{staticClass:"language-Michelson"},[s("span",{staticClass:"token keyword"},[t._v("storage")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("map")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("address")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("nat")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("parameter")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("unit")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("code")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("CDR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("option")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("nat")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("None")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("address")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("UPDATE")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("NIL")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("operation")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PAIR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("RUN")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token attr-name"},[t._v("%default")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Unit")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Elt")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Elt")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("10")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")])])])]),s("div",{staticClass:"stdout"},[s("pre",[s("span",{staticClass:"stream-name"},[t._v("stdout")]),s("br"),t._v("storage (map address nat);\nparameter unit;\ncode { CDR ; PUSH (option nat) None ; PUSH address \"tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb\" ; UPDATE ; NIL operation ; PAIR };\nRUN: use %default; drop all; push (Unit, {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10});\nCDR: pop (Unit, {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10}); push {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10};\nPUSH: push None;\nPUSH: push tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb;\nUPDATE: pop tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb, None, {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10}; push {'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10};\nNIL: push [];\nPAIR: pop [], {'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10}; push ([], {'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10});")])]),t._v(" "),s("div",{staticClass:"embedded-html"},[s("table",[s("thead",[s("tr",[s("th",[t._v("value                                                                                 ")]),s("th",[t._v("type                                                ")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v('{ Elt "tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE" 10 }')])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("map address nat")])])])])])]),t._v(" "),s("p",[t._v("As you can see from this example, giving a "),s("code",[t._v("(None)")]),t._v(" value to the map value before calling "),s("strong",[s("code",[t._v("UPDATE")])]),t._v(" will remove the corresponding key/value pair. If the key doesn't exist, this will have no effect on the map or the contract. Because of this, you may want to check first if a key exists in a map before removing it or updating it. This is what the "),s("strong",[s("code",[t._v("MEM")])]),t._v(" instruction is for:")]),t._v(" "),s("div",{staticClass:"language-Michelson extra-class"},[s("pre",{staticClass:"language-Michelson"},[s("code",{staticClass:"language-Michelson"},[s("span",{staticClass:"token keyword"},[t._v("storage")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("bool")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("parameter")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("map")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("address")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("nat")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("code")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("CAR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("address")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("MEM")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("NIL")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("operation")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PAIR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("RUN")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token attr-name"},[t._v("%default")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Elt")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Elt")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("10")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("False")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")])])])]),s("div",{staticClass:"stdout"},[s("pre",[s("span",{staticClass:"stream-name"},[t._v("stdout")]),s("br"),t._v("storage bool;\nparameter (map address nat);\ncode { CAR ; PUSH address \"tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb\" ; MEM ; NIL operation ; PAIR };\nRUN: use %default; drop all; push ({'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10}, False);\nCAR: pop ({'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10}, False); push {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10};\nPUSH: push tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb;\nMEM: pop tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb, {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10}; push True;\nNIL: push [];\nPAIR: pop [], True; push ([], True);")])]),t._v(" "),s("div",{staticClass:"embedded-html"},[s("table",[s("thead",[s("tr",[s("th",[t._v("value                                    ")]),s("th",[t._v("type                                     ")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("True")])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("bool")])])])])])]),t._v(" "),s("p",[t._v("This very simple contract checks if a single address is present in the map passed as a parameter. Please remember that "),s("strong",[s("code",[t._v("MEM")])]),t._v(" is going to pop the key and the map from the stack, so you should duplicate them if you want to use them later:")]),t._v(" "),s("div",{staticClass:"language-Michelson extra-class"},[s("pre",{staticClass:"language-Michelson"},[s("code",{staticClass:"language-Michelson"},[s("span",{staticClass:"token keyword"},[t._v("storage")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("map")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("address")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("nat")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("parameter")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("address")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("code")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("DUP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("DIP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token variable"},[t._v("UNPAIR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token variable"},[t._v("UNPAIR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("MEM")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("IF")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("option")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("nat")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("None")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("SWAP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("UPDATE")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token comment"},[t._v("## Removes key/value pair if exists")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("option")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("nat")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("Some")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("1")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("SWAP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("UPDATE")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token comment"},[t._v("## Adds key/value pair if doesn't exist")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("NIL")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("operation")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PAIR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("RUN")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token attr-name"},[t._v("%default")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"tz1NhNv9g7rtcjyNsH8Zqu79giY5aTqDDrzB"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Elt")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Elt")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("10")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")])])])]),s("div",{staticClass:"stdout"},[s("pre",[s("span",{staticClass:"stream-name"},[t._v("stdout")]),s("br"),t._v("storage (map address nat);\nparameter address;\ncode { DUP ; DIP { { DUP ; CAR ; DIP { CDR } } } ; { DUP ; CAR ; DIP { CDR } } ; MEM ; IF { PUSH (option nat) None ; SWAP ; UPDATE } { PUSH (option nat) (Some 1) ; SWAP ; UPDATE } ; NIL operation ; PAIR };\nRUN: use %default; drop all; push ('tz1NhNv9g7rtcjyNsH8Zqu79giY5aTqDDrzB', {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10});\nDUP: push ('tz1NhNv9g7rtcjyNsH8Zqu79giY5aTqDDrzB', {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10});\nDIP: protect 1 item(s);\nDUP: push ('tz1NhNv9g7rtcjyNsH8Zqu79giY5aTqDDrzB', {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10});\nCAR: pop ('tz1NhNv9g7rtcjyNsH8Zqu79giY5aTqDDrzB', {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10}); push tz1NhNv9g7rtcjyNsH8Zqu79giY5aTqDDrzB;\nDIP: protect 1 item(s);\nCDR: pop ('tz1NhNv9g7rtcjyNsH8Zqu79giY5aTqDDrzB', {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10}); push {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10};\nrestore 1 item(s);\nrestore 1 item(s);\nDUP: push ('tz1NhNv9g7rtcjyNsH8Zqu79giY5aTqDDrzB', {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10});\nCAR: pop ('tz1NhNv9g7rtcjyNsH8Zqu79giY5aTqDDrzB', {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10}); push tz1NhNv9g7rtcjyNsH8Zqu79giY5aTqDDrzB;\nDIP: protect 1 item(s);\nCDR: pop ('tz1NhNv9g7rtcjyNsH8Zqu79giY5aTqDDrzB', {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10}); push {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10};\nrestore 1 item(s);\nMEM: pop tz1NhNv9g7rtcjyNsH8Zqu79giY5aTqDDrzB, {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10}; push False;\nIF: pop False;\nPUSH: push (1,);\nSWAP: pop (1,), tz1NhNv9g7rtcjyNsH8Zqu79giY5aTqDDrzB; push (1,); push tz1NhNv9g7rtcjyNsH8Zqu79giY5aTqDDrzB;\nUPDATE: pop tz1NhNv9g7rtcjyNsH8Zqu79giY5aTqDDrzB, (1,), {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10}; push {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10, 'tz1NhNv9g7rtcjyNsH8Zqu79giY5aTqDDrzB': 1};\nNIL: push [];\nPAIR: pop [], {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10, 'tz1NhNv9g7rtcjyNsH8Zqu79giY5aTqDDrzB': 1}; push ([], {'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb': 5, 'tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE': 10, 'tz1NhNv9g7rtcjyNsH8Zqu79giY5aTqDDrzB': 1});")])]),t._v(" "),s("div",{staticClass:"embedded-html"},[s("table",[s("thead",[s("tr",[s("th",[t._v("value  ")]),s("th",[t._v("type                                                ")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v('{ Elt "tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb" 5 ;\n  Elt "tz1UVzNHTxMzkPn1uMXaSCTJYBQQc4x5dyNE" 10 ;\n  Elt "tz1NhNv9g7rtcjyNsH8Zqu79giY5aTqDDrzB" 1 }')])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("map address nat")])])])])])]),t._v(" "),s("p",[t._v("The provided address was not a value in the map, so the contract added it and gave it a balance of "),s("code",[t._v("1")]),t._v(". Now, if you change the address in the parameter for an address that's already in the map, you will see it disappear in the final map!")]),t._v(" "),s("p",[t._v("After checking if a key exists in a map, you probably want to get the value that's associated with it! Michelson provides the "),s("strong",[s("code",[t._v("GET")])]),t._v(" instruction to retrieve values bound to a key in a map:")]),t._v(" "),s("div",{staticClass:"language-Michelson extra-class"},[s("pre",{staticClass:"language-Michelson"},[s("code",{staticClass:"language-Michelson"},[s("span",{staticClass:"token keyword"},[t._v("storage")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("parameter")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("pair")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("map")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("code")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("CAR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token variable"},[t._v("UNPAIR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("GET")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("IF_NONE")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"none"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("NIL")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("operation")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PAIR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("RUN")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token attr-name"},[t._v("%default")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("Pair")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"banana"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Elt")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"cherry"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"red"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Elt")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"banana"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"yellow"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Elt")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"apple"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"green"')]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('""')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")])])])]),s("div",{staticClass:"stdout"},[s("pre",[s("span",{staticClass:"stream-name"},[t._v("stdout")]),s("br"),t._v("storage string;\nparameter (pair string (map string string));\ncode { CAR ; { DUP ; CAR ; DIP { CDR } } ; GET ; IF_NONE { PUSH string \"none\" } {} ; NIL operation ; PAIR };\nRUN: use %default; drop all; push (('banana', {'cherry': 'red', 'banana': 'yellow', 'apple': 'green'}), '');\nCAR: pop (('banana', {'cherry': 'red', 'banana': 'yellow', 'apple': 'green'}), ''); push ('banana', {'cherry': 'red', 'banana': 'yellow', 'apple': 'green'});\nDUP: push ('banana', {'cherry': 'red', 'banana': 'yellow', 'apple': 'green'});\nCAR: pop ('banana', {'cherry': 'red', 'banana': 'yellow', 'apple': 'green'}); push banana;\nDIP: protect 1 item(s);\nCDR: pop ('banana', {'cherry': 'red', 'banana': 'yellow', 'apple': 'green'}); push {'cherry': 'red', 'banana': 'yellow', 'apple': 'green'};\nrestore 1 item(s);\nGET: pop banana, {'cherry': 'red', 'banana': 'yellow', 'apple': 'green'}; push ('yellow',);\nIF_NONE: pop ('yellow',); push yellow;\nNIL: push [];\nPAIR: pop [], yellow; push ([], 'yellow');")])]),t._v(" "),s("div",{staticClass:"embedded-html"},[s("table",[s("thead",[s("tr",[s("th",[t._v("value                                        ")]),s("th",[t._v("type                                       ")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v('"yellow"')])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("string")])])])])])]),t._v(" "),s("p",[t._v("This very simple code sends a string and a map to the contract that will check if the string is a key in the map. If it is, it will save the color of the fruit in the storage. If it is not, it will save "),s("code",[t._v('"none"')]),t._v(" in the storage instead. We could also have gone a different road and used "),s("strong",[s("code",[t._v("IF_SOME")])]),t._v(" to check if the "),s("strong",[s("code",[t._v("GET")])]),t._v(" instruction returns anything:")]),t._v(" "),s("div",{staticClass:"language-Michelson extra-class"},[s("pre",{staticClass:"language-Michelson"},[s("code",{staticClass:"language-Michelson"},[s("span",{staticClass:"token keyword"},[t._v("storage")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("parameter")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("pair")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("map")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("code")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("CAR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token variable"},[t._v("UNPAIR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("GET")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token variable"},[t._v("IF_SOME")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"none"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("NIL")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("operation")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PAIR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("RUN")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token attr-name"},[t._v("%default")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token number"},[t._v("Pair")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"banana"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Elt")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"cherry"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"red"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Elt")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"banana"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"yellow"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Elt")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"apple"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"green"')]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('""')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")])])])]),s("div",{staticClass:"stdout"},[s("pre",[s("span",{staticClass:"stream-name"},[t._v("stdout")]),s("br"),t._v("storage string;\nparameter (pair string (map string string));\ncode { CAR ; { DUP ; CAR ; DIP { CDR } } ; GET ; { IF_NONE { PUSH string \"none\" } {} } ; NIL operation ; PAIR };\nRUN: use %default; drop all; push (('banana', {'cherry': 'red', 'banana': 'yellow', 'apple': 'green'}), '');\nCAR: pop (('banana', {'cherry': 'red', 'banana': 'yellow', 'apple': 'green'}), ''); push ('banana', {'cherry': 'red', 'banana': 'yellow', 'apple': 'green'});\nDUP: push ('banana', {'cherry': 'red', 'banana': 'yellow', 'apple': 'green'});\nCAR: pop ('banana', {'cherry': 'red', 'banana': 'yellow', 'apple': 'green'}); push banana;\nDIP: protect 1 item(s);\nCDR: pop ('banana', {'cherry': 'red', 'banana': 'yellow', 'apple': 'green'}); push {'cherry': 'red', 'banana': 'yellow', 'apple': 'green'};\nrestore 1 item(s);\nGET: pop banana, {'cherry': 'red', 'banana': 'yellow', 'apple': 'green'}; push ('yellow',);\nIF_NONE: pop ('yellow',); push yellow;\nNIL: push [];\nPAIR: pop [], yellow; push ([], 'yellow');")])]),t._v(" "),s("div",{staticClass:"embedded-html"},[s("table",[s("thead",[s("tr",[s("th",[t._v("value                                        ")]),s("th",[t._v("type                                       ")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v('"yellow"')])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("string")])])])])])]),t._v(" "),s("p",[t._v("Whether you use "),s("strong",[s("code",[t._v("IF_NONE")])]),t._v(" or "),s("strong",[s("code",[t._v("IF_SOME")])]),t._v(", if a value is found, it will be unwrapped from the optional value and dumped onto the stack. In this example, the values in the map are of type "),s("code",[t._v("string")]),t._v(", so "),s("strong",[s("code",[t._v("GET")])]),t._v(" returns "),s("code",[t._v("(Some string)")]),t._v(" and "),s("strong",[s("code",[t._v("IF_NONE")])]),t._v("/"),s("strong",[s("code",[t._v("IF_SOME")])]),t._v(" unwraps it and brings "),s("code",[t._v("string")]),t._v(" to the stack.")]),t._v(" "),s("p",[t._v("There is a last instruction to check before ending our tour of maps. Michelson provides an instruction to know the size of a given map, you guessed it, "),s("strong",[s("code",[t._v("SIZE")])]),t._v("!")]),t._v(" "),s("div",{staticClass:"language-Michelson extra-class"},[s("pre",{staticClass:"language-Michelson"},[s("code",{staticClass:"language-Michelson"},[s("span",{staticClass:"token keyword"},[t._v("storage")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("nat")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("parameter")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("map")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("nat")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("code")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("CAR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("SIZE")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("NIL")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("operation")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PAIR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("RUN")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token attr-name"},[t._v("%default")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Elt")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"cherry"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("16")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Elt")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"banana"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("24")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Elt")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"apple"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("32")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("0")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")])])])]),s("div",{staticClass:"stdout"},[s("pre",[s("span",{staticClass:"stream-name"},[t._v("stdout")]),s("br"),t._v("storage nat;\nparameter (map string nat);\ncode { CAR ; SIZE ; NIL operation ; PAIR };\nRUN: use %default; drop all; push ({'cherry': 16, 'banana': 24, 'apple': 32}, 0);\nCAR: pop ({'cherry': 16, 'banana': 24, 'apple': 32}, 0); push {'cherry': 16, 'banana': 24, 'apple': 32};\nSIZE: pop {'cherry': 16, 'banana': 24, 'apple': 32}; push 3;\nNIL: push [];\nPAIR: pop [], 3; push ([], 3);")])]),t._v(" "),s("div",{staticClass:"embedded-html"},[s("table",[s("thead",[s("tr",[s("th",[t._v("value                                 ")]),s("th",[t._v("type                                    ")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("3")])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("nat")])])])])])]),t._v(" "),s("p",[t._v("As usual, this kind of instruction returns a "),s("code",[t._v("nat")]),t._v(" value.")]),t._v(" "),s("p",[t._v("Now that you have a better understanding of "),s("code",[t._v("maps")]),t._v(" in Michelson, we can check "),s("code",[t._v("big maps")]),t._v(". Under the hood, big maps are actually maps. The only major difference is that when Michelson loads a map into memory, it goes through all the key/value pairs and get them ready to be used by your code. This consumes gas and can become very expensive if the map is huge. In the case of a big map, Michelson does not prepare the map and will only access the key/value pair you request. This will be a lot cheaper than using a map with a big drawback though: you won't get any information about the map outside of the key/value pair you are trying to access. This means instructions like "),s("strong",[s("code",[t._v("SIZE")])]),t._v(" are not possible, as well as iterative instructions like "),s("strong",[s("code",[t._v("ITER")])]),t._v(" and "),s("strong",[s("code",[t._v("MAP")])]),t._v(". The only instructions you can use with big maps are "),s("strong",[s("code",[t._v("EMPTY_BIG_MAP")])]),t._v(", "),s("strong",[s("code",[t._v("GET")])]),t._v(", "),s("strong",[s("code",[t._v("MEM")])]),t._v(" and "),s("strong",[s("code",[t._v("UPDATE")])]),t._v(". Let's try to create an example that uses all the available instructions for big maps!")]),t._v(" "),s("div",{staticClass:"language-Michelson extra-class"},[s("pre",{staticClass:"language-Michelson"},[s("code",{staticClass:"language-Michelson"},[s("span",{staticClass:"token keyword"},[t._v("storage")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token class-name"},[t._v("big_map")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("nat")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("parameter")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("unit")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("code")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("DROP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("EMPTY_BIG_MAP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("nat")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("nat")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("15")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("SOME")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"cherry"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("UPDATE")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("nat")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("22")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("SOME")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"banana"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("UPDATE")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("DUP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("string")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v('"cherry"')]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("DUP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("SWAP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("DIP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("SWAP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("MEM")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("IF")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("DIP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("DUP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("DUP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("DIP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("SWAP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("GET")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token variable"},[t._v("IF_SOME")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PUSH")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("nat")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("5")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("ADD")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("SOME")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("SWAP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("UPDATE")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("DROP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("DROP")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("NIL")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token class-name"},[t._v("operation")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token operator"},[t._v("PAIR")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token punctuation"},[t._v("\n")]),s("span",{staticClass:"token keyword"},[t._v("RUN")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token attr-name"},[t._v("%default")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token number"},[t._v("Unit")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),s("span",{staticClass:"token punctuation"},[t._v(" ")]),s("span",{staticClass:"token punctuation"},[t._v(";")]),s("span",{staticClass:"token punctuation"},[t._v("\n")])])])]),s("div",{staticClass:"stdout"},[s("pre",[s("span",{staticClass:"stream-name"},[t._v("stdout")]),s("br"),t._v('storage (big_map string nat);\nparameter unit;\ncode { DROP ; EMPTY_BIG_MAP string nat ; PUSH nat 15 ; SOME ; PUSH string "cherry" ; UPDATE ; PUSH nat 22 ; SOME ; PUSH string "banana" ; UPDATE ; DUP ; PUSH string "cherry" ; DUP ; SWAP ; DIP { SWAP } ; MEM ; IF { DIP { DUP } ; DUP ; DIP { SWAP } ; GET ; { IF_NONE { DROP } { PUSH nat 5 ; ADD ; SOME ; SWAP ; UPDATE } } } { DROP } ; NIL operation ; PAIR };\nRUN: use %default; drop all; push (Unit, -19);\nDROP: pop (Unit, -19);\nEMPTY_BIG_MAP: push -20;\nPUSH: push 15;\nSOME: pop 15; push (15,);\nPUSH: push cherry;\nUPDATE: pop cherry, (15,), -20; push -20;\nPUSH: push 22;\nSOME: pop 22; push (22,);\nPUSH: push banana;\nUPDATE: pop banana, (22,), -20; push -20;\nDUP: push -20;\nPUSH: push cherry;\nDUP: push cherry;\nSWAP: pop cherry, cherry; push cherry; push cherry;\nDIP: protect 1 item(s);\nSWAP: pop cherry, -20; push cherry; push -20;\nrestore 1 item(s);\nMEM: pop cherry, -20; push True;\nIF: pop True;\nDIP: protect 1 item(s);\nDUP: push -20;\nrestore 1 item(s);\nDUP: push cherry;\nDIP: protect 1 item(s);\nSWAP: pop cherry, -20; push cherry; push -20;\nrestore 1 item(s);\nGET: pop cherry, -20; push (15,);\nIF_NONE: pop (15,); push 15;\nPUSH: push 5;\nADD: pop 5, 15; push 20;\nSOME: pop 20; push (20,);\nSWAP: pop (20,), cherry; push (20,); push cherry;\nUPDATE: pop cherry, (20,), -20; push -20;\nNIL: push [];\nPAIR: pop [], -20; push ([], -20);')])]),t._v(" "),s("div",{staticClass:"embedded-html"},[s("table",[s("thead",[s("tr",[s("th",[t._v("value                                 ")]),s("th",[t._v("type                                                   ")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("1")])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("big_map string nat")])])])])]),s("br"),s("table",[s("thead",[s("tr",[s("th",[t._v("big_map                               ")]),s("th",[t._v("action                                     ")]),s("th",[t._v("key                                          ")]),s("th",[t._v("value                                   ")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("1")])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("alloc")])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("string")])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("nat")])])]),t._v(" "),s("tr",[s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("1")])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("update")])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v('"cherry"')])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("20")])])]),t._v(" "),s("tr",[s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("1")])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("update")])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v('"banana"')])]),s("td",[s("pre",{staticStyle:{"text-align":"left"}},[t._v("22")])])])])])]),t._v(" "),s("p",[t._v("This example is a little far-fetched but it demonstrates how you can use the different instructions available with big maps.")]),t._v(" "),s("Binder",{attrs:{filepath:"notebooks/tutorials/10/10_operations_on_sets_maps_&_big_maps.ipynb"}})],1)}),[],!1,null,null,null);a.default=o.exports}}]);